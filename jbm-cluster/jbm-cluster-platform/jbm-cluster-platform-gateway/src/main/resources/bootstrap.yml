server:
  port: 6060
  # undertow 配置
  undertow:
    # HTTP post内容的最大大小。当值为-1时，默认值为大小是无限的
    max-http-post-size: -1
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 512
    # 是否分配的直接内存
    direct-buffers: true
    threads:
      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
      io: 8
      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
      worker: 256
spring:
  codec:
    max-in-memory-size: 104857600
  main:
    allow-bean-definition-overriding: true
  mvc:
    favicon:
      enabled: false
    pathmatch:
      # 适配 boot 2.6 路由与 springfox 兼容
      matching-strategy: ANT_PATH_MATCHER
  # 资源信息
  messages:
    # 国际化资源文件路径
    basename: i18n/error,i18n/message
  application:
    name: ${artifactId}
  cloud:
    #手动配置Bus id,
    bus:
      id: ${spring.application.name}:${server.port}
    # sentinel 配置
    sentinel:
      #      scg:
      #        fallback:
      #          mode: response
      #          response-status: 455
      #          response-body: error!
      # nacos配置持久化
      datasource:
        ds1:
          nacos:
            server-addr: ${spring.cloud.nacos.discovery.server-addr}
            dataId: sentinel-${spring.application.name}.json
            groupId: ${spring.cloud.nacos.config.group}
            namespace: ${spring.profiles.active}
            data-type: json
            rule-type: flow
    gateway:
      discovery:
        locator:
          #表明gateway开启服务注册和发现的功能，并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，# 这个router将以服务名开头的请求路径转发到对应的服务
          enabled: false
          #将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了,比如以/service-hi/*的请求路径被路由转发到服务名为service-hi的服务上
          lowerCaseServiceId: true
  #      routes:
  #        # 认证中心
  #        - id: jbm-cluster-platform-auth
  #          uri: lb://jbm-cluster-platform-auth
  #          predicates:
  #            - Path=/auth/**
  #          filters:
  #            # 验证码处理
  #            - CacheRequestFilter
  #            - ValidateCodeFilter
  #            - StripPrefix=1
  profiles:
    active: ${profile.name}

#Feign对Sentinel的支持
feign:
  sentinel:
    enabled: true

management:
  endpoints:
    web:
      exposure:
        # 开放部分端点和自定义端点
        include: health,info,open

jbm:
  # 开放api
  api:
    # 参数签名验证
    check-sign: false
    # 访问权限控制
    access-control: true
    # swagger调试,生产环境设为false
    api-debug: true
    # 始终放行
    permit-all:
      - /*/login/**
      - /*/logout/**
      - /*/oauth/**
      - /actuator/health
      - /actuator/info
    # 忽略权限鉴定
    authority-ignores:
      - /*/authority/granted/me
      - /*/authority/granted/me/menu
      - /*/current/user/**
    # 签名忽略
    sign-ignores:
      - /**/login/**
      - /**/logout/**


# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: Authorization
  # token有效期 设为一天 (必定过期) 单位: 秒
  timeout: 86400
  # token临时有效期 (指定时间无操作就过期) 单位: 秒
  activity-timeout: 1800
  # 开启内网服务调用鉴权
  check-id-token: true
  # Id-Token的有效期 (单位: 秒)
  id-token-timeout: 600
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # 是否尝试从header里读取token
  is-read-head: true
  # 是否尝试从cookie里读取token
  is-read-cookie: false
  # token前缀
  token-prefix: "Bearer"
  # jwt秘钥
  jwt-secret-key: abcdefghijklmnopqrstuvwxyz
  # 是否输出操作日志
  is-log: true

# 安全配置
security:
  # 验证码
  captcha:
    # 是否开启验证码
    enabled: true
    # 验证码类型 math 数组计算 char 字符验证
    type: MATH
    # line 线段干扰 circle 圆圈干扰 shear 扭曲干扰
    category: CIRCLE
    # 数字验证码位数
    numberLength: 1
    # 字符验证码长度
    charLength: 4
  # 防止XSS攻击
  xss:
    enabled: true
    excludeUrls:
      - /system/notice
  # 不校验白名单
  ignore:
    whites:
      - /code
      - /auth/**
      - /admin/**
      - /*/v2/api-docs
      - /csrf